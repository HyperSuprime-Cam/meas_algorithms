# -*- python -*-
Import("env")
import re, os
import lsst.tests

env.CheckSwig("python", ilang="c++",
              includedProducts="utils")

testLib = env.LoadableModuleIncomplete("_testLib", ["testLib.i"],
                                       LIBS=env.getlibs("meas_algorithms"))
#
# Tests
#
tests = lsst.tests.Control(env,
                           ignoreList=["testLib.py", "SillyCentroid.cc", "Measure_1.cc"],
                           expectedFailures={})

tests.run("*.cc")

env.CheckSwig("python", ilang="c++", includedProducts="utils pex_logging")
for target in tests.run("*.py"):
    env.Depends(target, "../python/lsst/meas/algorithms/_algorithmsLib%s" % (env['LDMODULESUFFIX']))

    if os.path.basename(target) in ["importCentroidAlgorithm.py",]:
        env.Depends(target, "_testLib%s" % (env["LDMODULESUFFIX"]))
        env.Depends(target, "testLib.py")

